name: publish2PSGallery

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #branches: [ master ] #do not include for now
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # 1. Create Release
      - name: 1. Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.MD
          draft: false
          prerelease: false

      # Needed because of super restrictive nature of the Publish-Module Function
      # https://github.com/PowerShell/PowerShell/issues/7722
      - name: 2. Install required Module Dependencies from PSGallery
        shell: pwsh
        run: |
              # Get .psd1 data
              $data = Import-PowerShellDataFile .\*.psd1

              # Get the RequiredModules
              $requiredModules = $data.RequiredModules.ModuleName
              
              if ($requiredModules) {
                  # Create credentials used to connect to private NuGet feed
                  Write-Output 'Creating credentials'
                  $pwd = ConvertTo-SecureString $NuGetApiKey -AsPlainText -Force
                  $cred = New-Object Management.Automation.PSCredential ("username", $pwd)
                  # Install the required modules
                  foreach ($module in $requiredModules) {
                      Install-Module $module -Repository $repo -Credential $cred -Verbose
                  }
              }

      # 3. Push 2 PSGallery
      - name: 3. Publish Module to PowerShell Gallery
        uses: pcgeek86/publish-powershell-module-action@v19
        id: publish-module
        with:
          modulePath: Posh-FortiGate6
          NuGetApiKey: ${{ secrets.PS_GALLERY_KEY }}